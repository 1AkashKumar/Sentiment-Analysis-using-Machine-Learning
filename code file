#WebScraping Part

import requests
from bs4 import BeautifulSoup
import pandas as pd
import time

# Define the Amazon product URL/ Flipkart URL (Replace with your product link)
URL = "put your url here"

# Headers to mimic a browser visit
HEADERS = {
    "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36",
    "Accept-Language": "en-US, en;q=0.5"
}

def get_reviews(url, max_pages=3):
    """Scrapes customer reviews from Amazon product pages"""
    reviews_list = []
    
    for page in range(1, max_pages + 1):
        print(f"Scraping page {page}...")
        page_url = f"{url}/ref=cm_cr_arp_d_paging_btm_next_{page}?pageNumber={page}"
        response = requests.get(page_url, headers=HEADERS)
        
        if response.status_code != 200:
            print("Failed to retrieve page. Try again later.")
            break
        
        soup = BeautifulSoup(response.text, "html.parser")
        
        # Find all review containers
        reviews = soup.find_all("span", {"data-hook": "review-body"})
        
        for review in reviews:
            reviews_list.append(review.text.strip())
        
        time.sleep(2)  # To prevent getting blocked by Amazon
    
    return reviews_list

# Scrape reviews
reviews = get_reviews(URL)

# Save reviews to CSV
df = pd.DataFrame(reviews, columns=["review"])
df.to_csv("amazon_reviews.csv", index=False)
print("Reviews saved to 'flipkart_reviews.csv'.")

#Comming to the Analysis Part

from nltk.sentiment import SentimentIntensityAnalyzer
import nltk
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

# # nltk.download("vader_lexicon")
sia = SentimentIntensityAnalyzer()

# # Load scraped reviews
df = pd.read_csv("IMDB Dataset.csv")
df = df["review"].reset_index()
# # Sentiment analysis function
def get_sentiment(text):
    score = sia.polarity_scores(str(text))["compound"]
    return "Positive" if score >= 0.25 else "Negative" if score <= -0.25 else "Neutral"

df["Sentiment"] = df["review"].apply(get_sentiment)

# Save results
# df.to_csv("amazon_reviews_with_sentiment.csv", index=False)
# print("Sentiment analysis complete! Results saved.")
plt.figure(figsize=(8, 6))
sns.countplot(x='Sentiment', data=df, palette='Set2')
plt.title('Sentiment Distribution of Amazon Reviews')
plt.xlabel('Sentiment')
plt.ylabel('Number of Reviews')
plt.show()
